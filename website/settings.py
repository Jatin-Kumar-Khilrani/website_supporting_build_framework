"""
Django settings for website project.

Generated by 'django-admin startproject' using Django 1.9.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

PROJECT_ROOT = os.path.abspath(os.path.dirname(__file__))
print BASE_DIR 

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '5yz!j#4h+dq^0j$v^+!0(qmki$o&m_kzgtq2%rh_@n+-ar@z%8'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

    
DATABASES = {
    'ws': {},  
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'workspace.sqlite3'),
        
    },  
#     'cbl': {
#         'ENGINE': 'django.db.backends.sqlite3',
#	 'NAME':  os.path.abspath(os.path.join(BASE_DIR, os.pardir))+'/workspace'+'/db.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     },

}
DATABASE_APPS_MAPPING = {'components': 'cbl', }#'workspace': 'ws',
DATABASE_ROUTERS = ['components.manage.DatabaseAppsRouter', ]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'workspace',
    'authenticate',
    'components',
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'website.middleware.LoginRequiredMiddleware.LoginRequiredMiddleware',
]

ROOT_URLCONF = 'website.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(PROJECT_ROOT, 'templates').replace('\\','/'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
            ],
        },
    },
]



SITE_ROOT = os.path.dirname(os.path.realpath(__file__))

MEDIA_ROOT = os.path.join(os.path.dirname(__file__), '../media/')

MEDIA_URL = '/media/'

STATIC_ROOT = os.path.join(os.path.dirname(__file__), '../static/')

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(SITE_ROOT, 'static'),
)

WSGI_APPLICATION = 'website.wsgi.application'


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

SESSION_SERIALIZER = 'django.contrib.sessions.serializers.JSONSerializer'

AUTHENTICATION_BACKENDS = ('django.contrib.auth.backends.ModelBackend','authenticate.my_backend.MyBackend')
###################################### Authentication Settings Start
# LOGIN_REQUIRED_URLS = (
#     r'/login/(.*)$',
# )
LOGIN_URL = '/authenticate/login/'
LOGIN_REDIRECT_URL = '/'
LOGOUT_URL = '/authenticate/login/'

LOGIN_EXEMPT_URLS = (

 r'^about\.html$',

 r'^workspace/download_iso/',

 r'^authenticate/authenticate_user/',
 
 r'^/admin/',
 
 r'^authenticate/register/',


)
###################################### Authentication Settings End

# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

SESSION_EXPIRE_AT_BROWSER_CLOSE = False
SESSION_COOKIE_AGE = 60 * 60 * 24 * 30 # sec min hr day

# SECURE_HSTS_SECONDS = 31536000

ws_path = os.path.abspath(os.path.join(BASE_DIR, os.pardir))+"/workspace"

pci_sig_lst = []
pci_sig_dict = {}



